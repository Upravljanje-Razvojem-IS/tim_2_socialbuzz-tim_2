// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserService.Entities;

namespace UserService.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("UserService.Entities.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CityId");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CityName");

                    b.HasKey("CityId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("98a5cee0-2a63-405c-887a-5bd623b5b5e3"),
                            CityName = "Novi Sad"
                        },
                        new
                        {
                            CityId = new Guid("a4e47e1c-3f77-4c0f-abb5-234e74d19e65"),
                            CityName = "Beograd"
                        });
                });

            modelBuilder.Entity("UserService.Entities.Corporation", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorporationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CorporationName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("HeadquartersAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HeadquartersAddress");

                    b.Property<string>("HeadquartersCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HeadquartersCity");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Password");

                    b.Property<string>("Pib")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Pib");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telephone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.HasIndex("RoleId");

                    b.ToTable("Corporation");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("113a283a-f8ff-4f09-9895-ae60b9a0755a"),
                            CityId = new Guid("98a5cee0-2a63-405c-887a-5bd623b5b5e3"),
                            CorporationName = "Financial Corporation",
                            Email = "financial_corpo@gmail.com",
                            HeadquartersAddress = "Radnicka 1",
                            HeadquartersCity = "Novi Sad",
                            IsActive = true,
                            Password = "pass123",
                            Pib = "187398",
                            RoleId = new Guid("1dce00e0-00ff-4434-a989-611dad6a08e4"),
                            Telephone = "+3816228749275",
                            Username = "Financial Corporation"
                        },
                        new
                        {
                            UserId = new Guid("043bea8a-5b7c-4626-9812-635bdf12e7d7"),
                            CityId = new Guid("98a5cee0-2a63-405c-887a-5bd623b5b5e3"),
                            CorporationName = "Billing Corporation",
                            Email = "billing_corpo@gmail.com",
                            HeadquartersAddress = "Danila Kisa 15",
                            HeadquartersCity = "Novi Sad",
                            IsActive = true,
                            Password = "pass123",
                            Pib = "1844398",
                            RoleId = new Guid("1dce00e0-00ff-4434-a989-611dad6a08e4"),
                            Telephone = "+3816228749275",
                            Username = "Billing Corporation"
                        });
                });

            modelBuilder.Entity("UserService.Entities.PersonalUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Password");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telephone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.HasIndex("RoleId");

                    b.ToTable("PersonalUser");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("2106c90f-7f5d-45f9-a8bd-2c459d015eba"),
                            CityId = new Guid("98a5cee0-2a63-405c-887a-5bd623b5b5e3"),
                            Email = "nata@gmail.com",
                            FirstName = "Natalija",
                            IsActive = true,
                            LastName = "Gajic",
                            Password = "pass123",
                            RoleId = new Guid("d8994917-94b0-40c8-91f5-dd0f81570369"),
                            Telephone = "+3816928749275",
                            Username = "NatalijaG"
                        },
                        new
                        {
                            UserId = new Guid("aa6c4d37-96cc-4661-a497-5dd9ec03aa25"),
                            CityId = new Guid("98a5cee0-2a63-405c-887a-5bd623b5b5e3"),
                            Email = "vladika@gmail.com",
                            FirstName = "Vladimir",
                            IsActive = true,
                            LastName = "Filipovic",
                            Password = "pass123",
                            RoleId = new Guid("1dce00e0-00ff-4434-a989-611dad6a08e4"),
                            Telephone = "+3816968749275",
                            Username = "VladikaF"
                        },
                        new
                        {
                            UserId = new Guid("ae796ebb-9b2a-4e19-be89-44c93d0d792e"),
                            CityId = new Guid("a4e47e1c-3f77-4c0f-abb5-234e74d19e65"),
                            Email = "stefke@gmail.com",
                            FirstName = "Stefan",
                            IsActive = true,
                            LastName = "Ostojic",
                            Password = "pass123",
                            RoleId = new Guid("1dce00e0-00ff-4434-a989-611dad6a08e4"),
                            Telephone = "+3816928749275",
                            Username = "StefanO"
                        });
                });

            modelBuilder.Entity("UserService.Entities.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RoleName");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("d8994917-94b0-40c8-91f5-dd0f81570369"),
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = new Guid("1dce00e0-00ff-4434-a989-611dad6a08e4"),
                            RoleName = "Regular user"
                        });
                });

            modelBuilder.Entity("UserService.Entities.Corporation", b =>
                {
                    b.HasOne("UserService.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("UserService.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("City");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UserService.Entities.PersonalUser", b =>
                {
                    b.HasOne("UserService.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("UserService.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("City");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
